import fs, {promises as fsp} from 'fs';
import {SimpleJob} from "./simple-job";
import {RunContext, Script} from "../script-executor";
import path from "path";

export class FksGnuplotJob extends SimpleJob {
    protected data: string | null = null;
    protected source: string | null = null;
    protected dataFileName: string | null = null;
    protected isColored: boolean = false;

    protected log: string = "";

    public setSource(source: string) {
        this.source = source;
    }

    public setData(data: string) {
        this.data = data;
    }

    public setDataFileName(fileName: string) {
        if (!/^[a-zA-Z0-9_.-]+$/.test(fileName)) {
            return; // todo error
        }
        this.dataFileName = fileName;
    }

    public setColored(isColored: boolean = true) {
        this.isColored = isColored;
    }

    protected async onRunning(runContext: RunContext): Promise<void> {
        runContext.output.on("data", data => this.log += data.toString());
        runContext.error.on("data", data => this.log += data.toString());
    };

    async prepare() {
        await fsp.writeFile(path.join(this.directory.path, "source.plt"), this.source ?? "");
        if (this.dataFileName) {
            await fsp.writeFile(path.join(this.directory.path, this.dataFileName), this.data ?? "");
        }

        // Final PDF is generated by TeX
        await fsp.writeFile(path.join(this.directory.path, "main.tex"),
            "\\documentclass{fksempty}\n" +
            "\\usepackage[utf8]{inputenc}\n" +
            "\\geometry{ignoreheadfoot, a6paper, landscape}\n" +
            "\\begin{document}\n" +
            "\\capstartfalse\n" +
            "\\begin{figure}\n" +
            "\\input{out.tex}\n" +
            "\\end{figure}\n" +
            "\\end{document}");
    }

    getExecutionInfo(): Script {
        return {
            directory: this.directory,
            commands: [
                `gnuplot -e \"set format '$\\\"%g\\\"$';` +
                `set terminal epslatex ${this.isColored ? "color" : "monochrome"} size 12.7cm,7.7cm;` +
                `set output 'out.tex'\" source.plt`,

                "xelatex main.tex",
            ],
            mountPoint: "/usr/src/local",
            container: "fykosak/buildtools",
        }
    }

    getPdf(): fs.ReadStream | null {
        if (this.succeeded) {
            return fs.createReadStream(this.directory.getPath("main.pdf"));
        } else {
            return null;
        }
    }

    async getFullLog(): Promise<string | null> {
        return this.log;
    }
}
